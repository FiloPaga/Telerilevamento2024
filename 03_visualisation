# Visualizzazione di immagini satellitari

# Richiamo i pacchetti che voglio usare
library(terra)
library(imageRy) #non servono le "" perchè le abbiamo già scaricate

# Per avere la lista delle immagini disponibili in imageRy
im.list()

# Assegnamo un'immagine ad un oggetto
mato <- im.import("matogrosso_ast_2006209_lrg.jpg") # Questa funzione ci fa importare l'immagine
# Dopo averla importata la plottiamo per la visualizzazione
plot(mato)

# Immagine a singola banda da Sentinel, in particolare la seconda banda che è quella del blu in questo caso

b2 <- im.import("sentinel.dolomites.b2.tif") # Ci dice la riflettanza del blu
# Possiamo creare una scala di colori con questa funzione
clg <- colorRampPalette(c("black", "grey", "light grey"))(3) # Devo concatenarli perchè se no mi prende solo il primo
# La parentesi esterna col numero mi da quante sfumature ho al passaggio tra un colore e l'altro 
plot(b2,col=clg) # Per cambiare il colore con al nuova scala devo plottarlo

# Creo un'altra scala di colori
clGood <- colorRampPalette(c("brown1", "darkkhaki", "blue"))(100)
plot(b2,col=clSchifo)

# Importiamo altre bande della stessa immagine

b3 <- im.import("sentinel.dolomites.b3.tif") # Banda verde
plot(b3)

b4 <- im.import("sentinel.dolomites.b4.tif") # Banda rossa
plot(b4)

b8 <- im.import("sentinel.dolomites.b8.tif") # Near infrared
plot(b8)

# Multiframe - ci serve la funzione par
par(mfrow=c(2,2)) # Si mettono sempre prima le righe poi le colonne
# E' come se cresse una cornice 2 x 2

# Abbiamo creato la cornice, ora dobbiamo inserire le immagini
# Queste sono inserite automaticamente all'interno del nostro multiframe
plot(b2, col=clGood)
plot(b3, col=clGood)
plot(b4, col=clGood)
plot(b8, col=clGood)

# Adesso plottiamo le 4 bande in una singola riga

par(mfrow=c(1,4))
plot(b2, col=clGood)
plot(b3, col=clGood)
plot(b4, col=clGood)
plot(b8, col=clGood)

#facciamo un'immagine satellitare
stacksent <- c(b2,b3,b4,b8)
plot(stacksent, col=clGood)

dev.off() #per togliere il par precedente

#voglio solo l'immagine infrarosso
plot(stacksent[[4]], col=clGood)
dev.off()

# Montare le immagini delle varie bande tutte insieme

# carichiamo i pacchetti che ci servono
library(terra)
library(imageRy)
#io ho già le mie 4 bande importate ma le devo reimp

#per fare un immagine mettendo le bande insieme
#RGB plotting
#usiamo direttamente gli elementi dello stack
#segnamoci i nomi delle bande
#stacksent[[1]]=b2=blue
#stacksent[[2]]=b3=verde
#stacksent[[3]]=b4=rosso
#stacksent[[4]]=b8=nearinfrared

#utilizziamo una funzione di imageRy

im.plotRGB(stacksent, r=3, g=2, b=1) 
# im.plotRGB(stacksent, 3, 2, 1) posso anche omettere le lettere pechè è già in ordine

#sostituiamo la banda infrarossa al posto della banda rossa nella posizione del filtro rosso, dunque infrarosso lo visualizzo rosso
im.plotRGB(stacksent, 4, 2, 1)

#da qui, confronto immagini
par(mfrow=c(1,2))
im.plotRGB(stacksent, r=3, g=2, b=1) 
im.plotRGB(stacksent, 4, 2, 1)

#ora mettiamo anche l'immagine con lo schema a falsi colori
par(mfrow=c(1,3))
im.plotRGB(stacksent, r=3, g=2, b=1) 
im.plotRGB(stacksent, 4, 2, 1)
im.plotRGB(stacksent, 4, 3, 2)
#non cambia molto perchè è l'infrarosso che governa tutto
dev.off()
#adesso montiamo l'infrarosso sul verde, dove la vegetazione riflette molto infra
im.plotRGB(stacksent, 3, 4, 2) #così la mia veg mi diventa verde

#nir on blue
im.plotRGB(stacksent, 3, 2, 4)

#final multiframe
par(mfrow=c(2,2))
im.plotRGB(stacksent, r=3, g=2, b=1) 
im.plotRGB(stacksent, 4, 2, 1)
im.plotRGB(stacksent, 3, 4, 2)
im.plotRGB(stacksent, 3, 2, 4)
#vedi l'utilizzo dell'infrarosso montato sui diversi filtri e vedi quanto sia potente l'infrarosso e quanto il nostro occhio sia stupido

#correlation of information
pairs(stacksent)
#ci permette di capire perchè l'infrarosso aggiunge info, perchè non è correlato rispetto a R G B che invece sono tutti molto simili tra loro

